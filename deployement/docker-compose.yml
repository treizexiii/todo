version: "3"

services:
  api:
    container_name: todo-api
    build:
      context: ../.
      dockerfile: src/Api/Dockerfile
    ports:
      - "7070:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
      - DbSecret:Host=todo-db
      - DbSecret:Port=${DB_PORT}
      - DbSecret:User=${DB_USER}
      - DbSecret:Password=${DB_PASSWORD}
      - DbSecret:Database=${DB_NAME}
    depends_on:
      - postgres
    networks:
      - todos-network

  postgres:
    container_name: todo-db
    image: postgres:13.13
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "${DATA_DIR}/postgres:/var/lib/postgresql/data"
    networks:
      - todos-network

    #  db-command:
#    container_name: todo-db-command
#    build:
#      context: ../.
#      dockerfile: src/Persistence/Persistence.MigrationTool/Dockerfile
#    environment:
#      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
#      - DbSecret:Host=postgres
#      - DbSecret:Port=${DB_PORT}
#      - DbSecret:Username=${DB_USER}
#      - DbSecret:Password=${DB_PASSWORD}
#      - DbSecret:Database=${DB_NAME}
#    tty: true
#    depends_on:
#      - postgres

#  web-app:
#    container_name: todo-web-app
#    build:
#      context: ../.
#      dockerfile: src/WebApp/Dockerfile
#    ports:
#      - "7071:80"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
#      - ASPNETCORE_URLS=http://+:80
#      - API_URL=${API_URL}
    # volumes:
    #   - "${WEBAPP_CONFIG_DIR}:/usr/share/nginx/html/configuration"

#  identity-server:
#    container_name: identity-server
#    build:
#      context: ../.
#      dockerfile: src/Authentication/Authentication.IdentityServer/Dockerfile
#    ports:
#      - "7000:80"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
#      - ASPNETCORE_URLS=http://+:80
#    extra_hosts:
#      - "identity-db:${IP_ADDRESS}"
#    depends_on:
#      - postgres

#  grpc-server:
#    build:
#      context: ../.
#      dockerfile: src/GrpcService/Dockerfile
#    container_name: grpc-server
#    ports:
#      - "127.0.0.1:8080:8080"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development

networks:
  todos-network:
    driver: bridge
