version: "3"

services:
  api:
    container_name: api
    image: registry.treize.cloud/todos-api:${TAG}
    ports:
      - "${API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
    extra_hosts:
      - "todo-db:${IP_ADDRESS}"
    depends_on:
      - postgres

  web-app:
    container_name: web-app
    image: registry.treize.cloud/todos-webapp:${TAG}
    ports:
      - "${WEBAPP_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
      - API_URL=http://${IP_ADDRESS}:5000

  db-command:
    container_name: db-command
    image: registry.treize.cloud/todos-db-builder:${TAG}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    tty: true
    extra_hosts:
      - "todo-db:${IP_ADDRESS}"
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:13.13
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "${DATA_DIR}/postgres:/var/lib/postgresql/data"
